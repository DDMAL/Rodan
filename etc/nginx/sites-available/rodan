# [TODO] Rewrite whole thing. 

upstream iip {
    server unix:/tmp/iipserver_1.sock fail_timeout=0;
}

upstream rodan {
    server unix:/tmp/rodan.sock fail_timeout=0;
}

upstream rodan_websocket {
    server unix:/tmp/rodan_websocket.sock fail_timeout=0;
}

# 80 open for LetsEncrypt.
server
{
    listen      80;
    server_name some-new-domain.simssa.ca;
    location /.well-known
    {
        alias /srv/webapps/Rodan/.well-known;
    }
}

server {
    listen 443 ssl;
    ssl on;
    # Examples
    ssl_certificate /etc/letsencrypt/live/some-new-domain.simssa.ca/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/some-new-domain.simssa.ca/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DE\S !MD5 !EXP !PSK !SRP !DSS";

    index index.html index.htm;
    server_name some-new-domain.simssa.ca;
    client_max_body_size 200M;
    error_log /var/log/nginx/some-new-domain.simssa.ca/error.log;
    access_log /var/log/nginx/some-new-domain.simssa.ca/access.log;

    location /static {
        root /srv/webapps/Rodan/rodan;
        autoindex off;
    }

    # Media files
    location /uploads {
    
    # [TODO] - Rewrite without IFs
     if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://some-new-domain.simssa.ca';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' 'https://some-new-domain.simssa.ca';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' 'https://some-new-domain.simssa.ca';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     }

        alias /mnt/rodan_data/;
        autoindex off;
    }

    location / {
        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        # Proxy pass to Rodan.
        proxy_http_version 1.1;
        proxy_pass http://rodan;
        proxy_pass_header Server;
        proxy_pass_header Set-Cookie;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 10;
        proxy_read_timeout 60;
    }

    location /ws/ {
        proxy_http_version 1.1;
        proxy_pass http://rodan_websocket;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 10;
        proxy_read_timeout 60;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /fcgi-bin/iipsrv.fcgi {
        fastcgi_pass    iip;
        fastcgi_param   PATH_INFO $fastcgi_script_name;
        fastcgi_param   REQUEST_METHOD $request_method;
        fastcgi_param   QUERY_STRING $query_string;
        fastcgi_param   CONTENT_TYPE $content_type;
        fastcgi_param   CONTENT_LENGTH $content_length;
        add_header 'Access-Control-Allow-Origin' '*';
    }
}
