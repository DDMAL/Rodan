# Generated by Django 2.0.13 on 2023-06-26 17:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import rodan.models.resource
import sortedm2m.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'permissions': (('view_connection', 'View Connection'),),
            },
        ),
        migrations.CreateModel(
            name='Input',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_port_type_name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'permissions': (('view_input', 'View Input'),),
            },
        ),
        migrations.CreateModel(
            name='InputPort',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('extern', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'permissions': (('view_inputport', 'View InputPort'),),
            },
        ),
        migrations.CreateModel(
            name='InputPortType',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('minimum', models.IntegerField(db_index=True)),
                ('maximum', models.IntegerField(db_index=True)),
                ('is_list', models.BooleanField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('author', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('settings', jsonfield.fields.JSONField(default={'type': 'object'})),
                ('job_queue', models.CharField(default='celery', max_length=15)),
                ('enabled', models.BooleanField(db_index=True, default=False)),
                ('interactive', models.BooleanField(db_index=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Output',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('output_port_type_name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'permissions': (('view_output', 'View Output'),),
            },
        ),
        migrations.CreateModel(
            name='OutputPort',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('extern', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'permissions': (('view_outputport', 'View OutputPort'),),
            },
        ),
        migrations.CreateModel(
            name='OutputPortType',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('minimum', models.IntegerField(db_index=True)),
                ('maximum', models.IntegerField(db_index=True)),
                ('is_list', models.BooleanField(db_index=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_port_types', to='rodan.Job')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, db_index=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('admin_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_as_admin', to='auth.Group')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projects', to=settings.AUTH_USER_MODEL)),
                ('worker_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_as_worker', to='auth.Group')),
            ],
            options={
                'permissions': (('view_project', 'View Project'),),
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('resource_file', models.FileField(blank=True, max_length=255, upload_to=rodan.models.resource.upload_path)),
                ('processing_status', models.IntegerField(blank=True, choices=[(0, 'Scheduled'), (1, 'Processing'), (4, 'Finished'), (-1, 'Failed'), (None, 'Not applicable')], db_index=True, null=True)),
                ('error_summary', models.TextField(blank=True, default='', null=True)),
                ('error_details', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_resource', 'View Resource'),),
            },
        ),
        migrations.CreateModel(
            name='ResourceLabel',
            fields=[
                ('name', models.CharField(max_length=36, unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResourceList',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcelists', to=settings.AUTH_USER_MODEL)),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='rodan.Output')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resourcelists', to='rodan.Project')),
            ],
            options={
                'permissions': (('view_resourcelist', 'View ResourceList'),),
            },
        ),
        migrations.CreateModel(
            name='ResourceType',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mimetype', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.CharField(blank=True, db_index=True, max_length=255)),
                ('extension', models.CharField(blank=True, db_index=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ResultsPackage',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(0, 'Scheduled'), (1, 'Processing'), (4, 'Finished'), (-1, 'Failed'), (9, 'Cancelled'), (8, 'Expired')], db_index=True, default=0)),
                ('percent_completed', models.IntegerField(db_index=True, default=0)),
                ('packaging_mode', models.IntegerField(choices=[(0, 'Only endpoint resources'), (1, 'All resources -- subdirectoried by resource names'), (2, 'Diagnosis, including all inputs/outputs/settings -- subdirectoried by workflow job and resource names')], db_index=True)),
                ('celery_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('error_summary', models.TextField(blank=True, default='', null=True)),
                ('error_details', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('expiry_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='results_packages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_resultspackage', 'View ResultsPackage'),),
            },
        ),
        migrations.CreateModel(
            name='RunJob',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('workflow_job_uuid', models.CharField(db_index=True, max_length=32)),
                ('resource_uuid', models.CharField(blank=True, db_index=True, max_length=32, null=True)),
                ('job_name', models.CharField(db_index=True, max_length=200)),
                ('job_queue', models.CharField(default='celery', max_length=15)),
                ('job_settings', jsonfield.fields.JSONField(default={})),
                ('status', models.IntegerField(choices=[(0, 'Scheduled'), (1, 'Processing'), (4, 'Finished'), (-1, 'Failed'), (9, 'Cancelled'), (2, 'Waiting for input')], db_index=True, default=0)),
                ('celery_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('error_summary', models.TextField(blank=True, default='', null=True)),
                ('error_details', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('interactive_timings', jsonfield.fields.JSONField(default=[])),
                ('working_user_token', models.UUIDField(null=True)),
                ('working_user_expiry', models.DateTimeField(db_index=True, null=True)),
                ('lock', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'permissions': (('view_runjob', 'View RunJob'),),
            },
        ),
        migrations.CreateModel(
            name='Tempauthtoken',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expiry', models.DateTimeField(db_index=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='temp_authtoken', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_tempauthtoken', 'View Temp Authtoken'),),
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('send_email', models.BooleanField(db_index=True, default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_preference', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_userpreference', 'View User Preference'),),
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('valid', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflows', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows', to='rodan.Project')),
            ],
            options={
                'permissions': (('view_workflow', 'View Workflow'),),
            },
        ),
        migrations.CreateModel(
            name='WorkflowJob',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_settings', jsonfield.fields.JSONField(blank=True, default={}, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('appearance', jsonfield.fields.JSONField(default={'x': 0.5, 'y': 0.5})),
            ],
            options={
                'permissions': (('view_workflowjob', 'View WorkflowJob'),),
            },
        ),
        migrations.CreateModel(
            name='WorkflowJobGroup',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('appearance', jsonfield.fields.JSONField(default={'x': 0.5, 'y': 0.5})),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_as_workflow_job_groups', to='rodan.Workflow')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_job_groups', to='rodan.Workflow')),
            ],
            options={
                'permissions': (('view_workflowjobgroup', 'View WorkflowJobGroup'),),
            },
        ),
        migrations.CreateModel(
            name='WorkflowRun',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(21, 'Request processing'), (1, 'Processing'), (4, 'Finished'), (-1, 'Failed'), (29, 'Request cancelling'), (9, 'Cancelled'), (31, 'Request retrying'), (11, 'Retrying')], db_index=True, default=1)),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflow_runs', to=settings.AUTH_USER_MODEL)),
                ('last_redone_runjob_tree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='rodan.RunJob')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_runs', to='rodan.Project')),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflow_runs', to='rodan.Workflow')),
            ],
            options={
                'permissions': (('view_workflowrun', 'View WorkflowRun'),),
            },
        ),
        migrations.AddField(
            model_name='workflowjob',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflow_jobs', to='rodan.WorkflowJobGroup'),
        ),
        migrations.AddField(
            model_name='workflowjob',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workflow_jobs', to='rodan.Job'),
        ),
        migrations.AddField(
            model_name='workflowjob',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_jobs', to='rodan.Workflow'),
        ),
        migrations.AddField(
            model_name='runjob',
            name='workflow_job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='run_jobs', to='rodan.WorkflowJob'),
        ),
        migrations.AddField(
            model_name='runjob',
            name='workflow_run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='run_jobs', to='rodan.WorkflowRun'),
        ),
        migrations.AddField(
            model_name='runjob',
            name='working_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interactive_runjobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resultspackage',
            name='workflow_run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results_packages', to='rodan.WorkflowRun'),
        ),
        migrations.AddField(
            model_name='resourcelist',
            name='resource_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='rodan.ResourceType'),
        ),
        migrations.AddField(
            model_name='resourcelist',
            name='resources',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='rodan.Resource'),
        ),
        migrations.AddField(
            model_name='resource',
            name='labels',
            field=models.ManyToManyField(blank=True, to='rodan.ResourceLabel'),
        ),
        migrations.AddField(
            model_name='resource',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='rodan.Output'),
        ),
        migrations.AddField(
            model_name='resource',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='rodan.Project'),
        ),
        migrations.AddField(
            model_name='resource',
            name='resource_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resources', to='rodan.ResourceType'),
        ),
        migrations.AddField(
            model_name='outputporttype',
            name='resource_types',
            field=models.ManyToManyField(related_name='output_port_types', to='rodan.ResourceType'),
        ),
        migrations.AddField(
            model_name='outputport',
            name='output_port_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rodan.OutputPortType'),
        ),
        migrations.AddField(
            model_name='outputport',
            name='workflow_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_ports', to='rodan.WorkflowJob'),
        ),
        migrations.AddField(
            model_name='output',
            name='output_port',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outputs', to='rodan.OutputPort'),
        ),
        migrations.AddField(
            model_name='output',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outputs', to='rodan.Resource'),
        ),
        migrations.AddField(
            model_name='output',
            name='resource_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outputs', to='rodan.ResourceList'),
        ),
        migrations.AddField(
            model_name='output',
            name='run_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='rodan.RunJob'),
        ),
        migrations.AddField(
            model_name='inputporttype',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_port_types', to='rodan.Job'),
        ),
        migrations.AddField(
            model_name='inputporttype',
            name='resource_types',
            field=models.ManyToManyField(related_name='input_port_types', to='rodan.ResourceType'),
        ),
        migrations.AddField(
            model_name='inputport',
            name='input_port_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rodan.InputPortType'),
        ),
        migrations.AddField(
            model_name='inputport',
            name='workflow_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_ports', to='rodan.WorkflowJob'),
        ),
        migrations.AddField(
            model_name='input',
            name='input_port',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inputs', to='rodan.InputPort'),
        ),
        migrations.AddField(
            model_name='input',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inputs', to='rodan.Resource'),
        ),
        migrations.AddField(
            model_name='input',
            name='resource_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inputs', to='rodan.ResourceList'),
        ),
        migrations.AddField(
            model_name='input',
            name='run_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='rodan.RunJob'),
        ),
        migrations.AddField(
            model_name='connection',
            name='input_port',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='rodan.InputPort'),
        ),
        migrations.AddField(
            model_name='connection',
            name='output_port',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='rodan.OutputPort'),
        ),
    ]
