function SearchTree(){this.rootNode=null;this.numNodes=0}function SearchTreeNode(a){this.payload=a;this.children={};this.numChildren=0}SearchTree.prototype={setRootNode:function(a){this.rootNode=a},insert:function(a,b){if(!this.rootNode){if(a.length){this.setRootNode(new SearchTreeNode(null));this.numNodes++}else{this.setRootNode(new SearchTreeNode(b));this.numNodes++;return}}this.rootNode.insert(a,b)},remove:function(a){this.rootNode.remove(a)},destroyTree:function(){this.rootNode=null;this.numNodes=0},search:function(a,d){var c=this.rootNode;for(var b=0;b<a.length;b++){var f=a[b];if(f in c.children){c=c.children[f]}else{if(d){return{result:c.payload,prefix:true}}else{return null}}}return{result:c.payload,prefix:false}},stringify:function(){return JSON.stringify(this)},populateFromJSON:function(a){var b=JSON.parse(a);this.rootNode=b.rootNode;this.numNodes=b.numNodes}};SearchTreeNode.prototype={insert:function(a,c){var b=a.splice(0,1);if(!a.length){if(b in this.children){this.children[b].payload=c}else{this.children[b]=new SearchTreeNode(c);this.numChildren++}}else{if(!(b in this.children)){this.children[b]=new SearchTreeNode(null);this.numChildren++}this.children[b].insert(a,c)}},remove:function(a){var b=a.splice(0,1);if(!a.length){if(b in this.children){if(this.children[b].numChildren){this.children[b].payload=null}else{delete this.children[b];this.numChildren--}}}else{if(b in this.children){this.children[b].remove(a)}}}};