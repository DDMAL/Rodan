function SearchTree(){this.rootNode=null;this.numNodes=0}function SearchTreeNode(a){this.payload=a;this.children={};this.numChildren=0}
SearchTree.prototype={setRootNode:function(a){this.rootNode=a},insert:function(a,c){if(!this.rootNode)if(a.length)this.setRootNode(new SearchTreeNode(null)),this.numNodes++;else{this.setRootNode(new SearchTreeNode(c));this.numNodes++;return}this.rootNode.insert(a,c)},remove:function(a){this.rootNode.remove(a)},destroyTree:function(){this.rootNode=null;this.numNodes=0},search:function(a,c){for(var b=this.rootNode,e=0;e<a.length;e++){var d=a[e];if(d in b.children)b=b.children[d];else return c?{result:b.payload,
prefix:!0}:null}return{result:b.payload,prefix:!1}},dfs:function(a){function c(a,b,e){if(b.payload.typeid==a)return b;var d=null,f;for(f in b.children){if(d)break;e[b.children[f].payload.typeid]={e:f,parent:b.payload.typeid};d=c(a,b.children[f],e)}return d}for(var b={},e=c(a,this.rootNode,b),d=[];a in b;)d.push(b[a].e),a=b[a].parent;b=d.reverse();return{node:e,edges:b}},stringify:function(){return JSON.stringify(this)},populateFromJSON:function(a){a=JSON.parse(a);this.rootNode=a.rootNode;this.numNodes=
a.numNodes}};
SearchTreeNode.prototype={insert:function(a,c){var b=a.splice(0,1);a.length?(b in this.children||(this.children[b]=new SearchTreeNode(null),this.numChildren++),this.children[b].insert(a,c)):b in this.children?this.children[b].payload=c:(this.children[b]=new SearchTreeNode(c),this.numChildren++)},remove:function(a){var c=a.splice(0,1);a.length?c in this.children&&this.children[c].remove(a):c in this.children&&(this.children[c].numChildren?this.children[c].payload=null:(delete this.children[c],this.numChildren--))},
getChildren:function(){var a=[],c;for(c in this.children)a.push(this.children[c]);return a}};
