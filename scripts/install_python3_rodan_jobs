#!/bin/bash
cd /code/Rodan/rodan/jobs

PIP=$(which pip3) || PIP=:

# update pip
$PIP install -U pip

mkdir -p /code/jobs

# Install Pixel_wrapper
rm -rf ./pixel_wrapper
git clone --recurse-submodules -b "${BRANCHES:-develop}" https://github.com/DDMAL/pixel_wrapper.git
cd ./pixel_wrapper/
$PIP install -r requirements.txt
python3 activate_wrapper.py
# [TODO] Test with yarn.
npm install
./node_modules/.bin/gulp develop:rodan
cd /code/Rodan/rodan/jobs

# Install Neon
rm -rf ./neon_wrapper
git clone --recurse-submodules -b "${BRANCHES:-develop}" https://github.com/DDMAL/neon_wrapper
cd ./neon_wrapper
git submodule update --init
git submodule update --remote
yarn install
yarn build
cd /code/Rodan/rodan/jobs

# Install pil_rodan
# pil_rodan is required for Calvo-Classifier because of the jpeg2000 resource type.
$PIP install -r ./pil_rodan/requirements.txt

# Install HPC Fast Trainer
$PIP install -r ./hpc_fast_trainer/requirements.txt
# Install MEI_encoding
$PIP install -r ./MEI_encoding/requirements.txt >/dev/null

# At the end, add all the jobs together.
cd /code/Rodan/rodan

sed -i 's/#py3 //g' /code/Rodan/rodan/settings.py

cd /

# git clone https://github.com/DDMAL/gamera4-rodan.git
# cd gamera4-rodan
# git checkout c7e2f84

# echo "###### build and install gamera ######"
# cd gamera-4
# python3 setup.py --nowx build && python3 setup.py --nowx install

# echo "###### build and install musicstaves ######"
# cd ../musicstaves
# python3 setup.py build && python3 setup.py install

# IF THE PROCESS IS TERMINATED BY AN ERROR, REFER TO THE 
# Rodan/rodan-main/code/rodan/jobs/gamera_rodan/gamera-rodan-doc.md FILE AND FIX IT. 
# THEN RERUN THE SCRIPT.

# echo "###### removing gamera4-rodan ######"
# cd / && rm -rf gamera4-rodan

# for more information refer to:
# Rodan/rodan-main/code/rodan/jobs/gamera_rodan/gamera-rodan-doc.md
###############################


