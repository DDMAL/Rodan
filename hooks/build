#!/bin/bash
# hooks/build
# https://docs.docker.com/docker-cloud/builds/advanced/

# RODAN_TAG=`cd rodan-main/code && git describe --tags --always`
# RODAN_CLIENT_TAG=`cd rodan-client/code && git describe --tags --always`
# RODAN_DOCKER_TAG=`git describe --tags --always`

source ./hooks/helper.sh
DOCKER_TAG=$(GetDockerTag $DOCKER_TAG) || ret_code=$?
if [[ ret_code -eq 1 ]]; then
  echo "[-] no branch detected, fallback to use docker tag=$DOCKER_TAG"
  echo "[-] Stop building due to wrong tag: $DOCKER_TAG"
  exit 1
elif [[ ret_code -eq 2 ]]; then
  echo "[-] no tag on release branch, fallback to use docker tag=$DOCKER_TAG"
  echo "[-] Stop building due to wrong tag: $DOCKER_TAG"
  exit 1
fi

echo "[+] Building images with tag: $DOCKER_TAG"

set -o errexit

# Fail building images
# Push to trigger webhook and send a message to slack
trap 'cleanup $?' EXIT
cleanup() {
  if [ "$1" != "0" ]; then
    echo "An error occurs when building images."
    echo "Push to another repo to trigger webhook on failure with tag syntax: {repo name}-{build status}-{source branch}-{docker tag}"

    docker tag ddmal/docker-webhook:placeholder ddmal/docker-webhook:rodan-fail-${SOURCE_BRANCH}-${DOCKER_TAG}
    docker push ddmal/docker-webhook:rodan-fail-${SOURCE_BRANCH}-${DOCKER_TAG}
  fi
}

# This "useless" image is build to prevent dockerhub from overwriting
# the nightly image with it's obligatory minimum of a build rule. If we want a build
# trigger with a HTTPS POST request, we must have at least 1 build rule.
docker build \
  --tag ddmal/docker-webhook:placeholder \
  .

###############################################################################
# Stage 1
#   Build and push Python3-Celery image

# Too many times did docker cache mess up a build. No more cache.
echo "[+] Building Python3-Celery"

docker build \
  --no-cache \
  --build-arg BRANCHES="develop" \
  --build-arg VERSION=${DOCKER_TAG} \
  --tag ddmal/rodan-python3-celery:${DOCKER_TAG} \
  --file ./python3-celery/Dockerfile \
  .

echo "[+] Pushing ddmal/rodan-python3-celery:${DOCKER_TAG}"
docker push ddmal/rodan-python3-celery:${DOCKER_TAG}

###############################################################################
# Stage 2
#   Build and push Rodan and Rodan-Client

echo "[+] Building Rodan & Celery Core"

BUILD_HASH=`git rev-parse --verify HEAD`
# Don't remove --no-cache
docker build \
  --no-cache \
  --build-arg BRANCHES="develop" \
  --build-arg VERSION=${DOCKER_TAG} \
  --build-arg build_hash=${BUILD_HASH} \
  --tag ddmal/rodan-main:${DOCKER_TAG} \
  --file ./rodan-main/Dockerfile \
  .

echo "[+] Building Rodan-Client"

docker build \
  --no-cache \
  --build-arg BRANCHES="develop" \
  --build-arg VERSION=${DOCKER_TAG} \
  --tag ddmal/rodan-client:${DOCKER_TAG} \
  ./rodan-client

echo "[+] Pushing ddmal/rodan-main:${DOCKER_TAG}"
docker push ddmal/rodan-main:${DOCKER_TAG}

echo "[+] Pushing ddmal/rodan-client:${DOCKER_TAG}"
docker push ddmal/rodan-client:${DOCKER_TAG}

##############################################################################
# Stage 3
#   Build the rest

echo "[+] Building GPU-Celery"

docker build \
  --no-cache \
  --build-arg BRANCHES="develop" \
  --build-arg VERSION=${DOCKER_TAG} \
  --tag ddmal/rodan-gpu-celery:${DOCKER_TAG} \
  --file ./gpu-celery/Dockerfile \
  .

echo "[+] Building Postgres"

docker build \
  --no-cache \
  --build-arg VERSION=${DOCKER_TAG} \
  --tag ddmal/postgres-plpython:${DOCKER_TAG} \
  --file ./postgres/Dockerfile \
  .

echo "[+] Building Nginx"

docker build \
  --no-cache \
  --build-arg VERSION=${DOCKER_TAG} \
  --tag ddmal/nginx:${DOCKER_TAG} \
  ./nginx

echo "[+] Building iipsrv"

docker build \
  --no-cache \
  --build-arg VERSION=${DOCKER_TAG} \
  --tag ddmal/iipsrv:${DOCKER_TAG} \
  ./iipsrv

echo "[+] Finished"
