#!/bin/bash
# hooks/build
# https://docs.docker.com/docker-cloud/builds/advanced/
set -o errexit

# This "useless" image is build to prevent dockerhub from overwriting
# the nightly image with it's obligatory minimum of a build rule. If we want a build
# trigger with a HTTPS POST request, we must have at least 1 build rule.
docker build \
  --tag ddmal/rodan:placeholder \
  .

RODAN_TAG='test'
#`cd rodan-main/code && git describe --tags --always`
RODAN_CLIENT_TAG='test'
#`cd rodan-client/code && git describe --tags --always`
RODAN_DOCKER_TAG='test'
#`git describe --tags --always`
BUILD_HASH='test'
#`git rev-parse --verify HEAD`

###############################################################################
# Stage 1
#   Build and push Python3-Celery image

# Too many times did docker cache mess up a build. No more cache.
# echo "[+] Building Python3-Celery"

# docker build \
#   --no-cache \
#   --build-arg BRANCHES="develop" \
#   --build-arg VERSION=${RODAN_TAG} \
#   --tag ddmal/rodan-python3-celery:test \
#   --tag ddmal/rodan-python3-celery:${RODAN_TAG} \
#   --file ./python3-celery/Dockerfile \
#   .

# echo "[+] Pushing Python3-Celery"
# docker push ddmal/rodan-python3-celery:test

# echo "[+] Python3-Celery needs to be made and pushed before Rodan/Celery because the Rodan image uses the Python3 image as its base."

# if [ -z `echo ${RODAN_TAG} | awk -F'-' '{print $3}'` ]; then
#   echo "[+] New tagged image for Python3-Celery: ${RODAN_TAG}"
#   docker push ddmal/rodan-python3-celery:${RODAN_TAG}
# fi


# ###############################################################################
# # Stage 2
# #   Build and push Rodan and Rodan-Client

# echo "[+] Building Rodan & Celery Core"

# # Don't remove --no-cache
# docker build \
#   --no-cache \
#   --build-arg BRANCHES="develop" \
#   --build-arg VERSION=${RODAN_TAG} \
#   --build-arg build_hash=${BUILD_HASH} \
#   --tag ddmal/rodan-main:test \
#   --tag ddmal/rodan-main:${RODAN_TAG} \
#   --file ./rodan-main/Dockerfile \
#   .

# echo "[+] Building iipsrv"

# docker build \
#   --no-cache \
#   --tag ddmal/iipsrv:nightly \
#   ./iipsrv

# echo "[+] Building Rodan-Client"

# docker build \
#   --no-cache \
#   --build-arg BRANCHES="develop" \
#   --build-arg VERSION=${RODAN_CLIENT_TAG} \
#   --tag ddmal/rodan-client:test \
#   --tag ddmal/rodan-client:${RODAN_CLIENT_TAG} \
#   ./rodan-client

# echo "[+] Pushing Rodan & Celery Core"

# if [ -z `echo ${RODAN_TAG} | awk -F'-' '{print $3}'` ]; then
#   echo "[+] New tagged image for Rodan/Celery: ${RODAN_TAG}"
#   docker push ddmal/rodan-main:${RODAN_TAG}
# fi

# docker push ddmal/rodan-main:test

# echo "[+] Pushing Rodan-Client"

# if [ -z `echo ${RODAN_CLIENT_TAG} | awk -F'-' '{print $3}'` ]; then
#   echo "[+] New tagged image for rodan-client: ${RODAN_CLIENT_TAG}"
#   docker push ddmal/rodan-client:${RODAN_CLIENT_TAG}
# fi

# docker push ddmal/rodan-client:test

###############################################################################
# Stage 3
#   Build the rest

echo "[+] Building Python2-Celery"

docker build \
  --no-cache \
  --build-arg BRANCHES="develop" \
  --build-arg VERSION=${RODAN_TAG} \
  --tag ddmal/rodan-python2-celery:test \
  --tag ddmal/rodan-python2-celery:${RODAN_TAG} \
  --file ./python2-celery/Dockerfile \
  .

echo "[+] Pushing Python2-Celery"
docker push ddmal/rodan-python2-celery:test


echo "[+] Building GPU-Celery"

docker build \
  --no-cache \
  --build-arg BRANCHES="develop" \
  --build-arg VERSION=${RODAN_TAG} \
  --tag ddmal/rodan-gpu-celery:test \
  --tag ddmal/rodan-gpu-celery:${RODAN_TAG} \
  --file ./gpu-celery/Dockerfile \
  .

echo "[+] Building Postgres"

docker build \
  --no-cache \
  --build-arg VERSION=${RODAN_DOCKER_TAG} \
  --tag ddmal/postgres-plpython:test \
  --tag ddmal/postgres-plpython:${RODAN_DOCKER_TAG} \
  --file ./postgres/Dockerfile \
  .

echo "[+] Building Nginx"

docker build \
  --no-cache \
  --build-arg VERSION=${RODAN_DOCKER_TAG} \
  --tag ddmal/nginx:test \
  --tag ddmal/nginx:${RODAN_DOCKER_TAG} \
  ./nginx

echo "[+] Building HPC-RabbitMQ"

docker build \
  --no-cache \
  --build-arg VERSION=${RODAN_DOCKER_TAG} \
  --tag ddmal/hpc-rabbitmq:test \
  --tag ddmal/hpc-rabbitmq:${RODAN_DOCKER_TAG} \
  ./hpc-rabbitmq

echo "[+] Finished"
