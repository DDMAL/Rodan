name: GitHub Actions Rodan


on:

  push:
    branches: [ develop ]
      
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DJANGO_DEBUG_MODE: True
      DJANGO_ALLOWED_HOSTS: =*
      REDIS_HOST : localhost
      REDIS_PORT : 6379
      REDIS_DB : 0
      RABBITMQ_URL : amqp://guest_user:guest_pass@localhost:5672//
      RABBITMQ_DEFAULT_USER : guest_user
      RABBITMQ_DEFAULT_PASS : guest_pass
      DJANGO_SECRET_KEY : local
      DJANGO_MEDIA_ROOT : ./data/
      DJANGO_ACCESS_LOG : ./rodan.log
      DJANGO_DEBUG_LOG : ./database.log
      CELERY_JOB_QUEUE : None
      POSTGRES_DB : rodan
      POSTGRES_USER : rodan
      POSTGRES_HOST : localhost
      POSTGRES_PORT : 5432
      POSTGRES_PASSWORD : rodan

    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install libxml2-dev
        run: sudo apt-get install libxml2-dev
      - name: Install libxslt1-dev
        run: sudo apt-get install libxslt1-dev   
      - name: Set up PostgreSQL and Redis
        run: |
          sudo apt-get install postgresql libpq-dev
          sudo service postgresql start
          sudo apt-get update -qy
          sudo /etc/init.d/postgresql restart
          sudo pip install redis
          # sudo redis-server /etc/redis/redis.conf --port 6379
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Install dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          path: "requirements.txt"
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: run migrations
        run: |
          sudo psql --host=localhost --dbname=database-name --username=postgres
          psql -c "CREATE DATABASE rodan;" -U postgres
          psql -c "CREATE USER rodan WITH PASSWORD 'rodan';" -U postgres
          psql -c "ALTER USER rodan WITH SUPERUSER;" -U postgres
          psql -c "CREATE LANGUAGE plpython2u;" -U postgres
          psql -c "GRANT ALL PRIVILEGES ON DATABASE "rodan" TO rodan;" -U postgres
          python manage.py makemigrations rodan
          python manage.py migrate
      - name: run manage.py test
        run: |
          python manage.py test
