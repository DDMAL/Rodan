version: "3.4"
services:
  nginx:
    image: "ddmal/nginx:${DOCKER_TAG}"
    command: /run/start
    depends_on:
      - celery
      - postgres
      - rabbitmq
      - redis
      - rodan-main
    environment:
      TZ: America/Toronto
      SERVER_HOST: localhost
    ports:
      - "80:80"
      - "443:443"
      - "9002:9002"
    volumes:
      - "resources:/rodan/data"

  rodan-main:
    image: "ddmal/rodan-main:${DOCKER_TAG}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/usr/bin/curl -H 'User-Agent: docker-healthcheck' http://localhost:8000/api/?format=json || exit 1"
        ]
      interval: "10s"
      timeout: "5s"
      retries: 2
      start_period: "2m"
    command: bash -c "tail -f /dev/null"
    environment:
      TZ: America/Toronto
      SERVER_HOST: localhost
      CELERY_JOB_QUEUE: None
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - iipsrv
    env_file:
      - ./scripts/local.env
    volumes:
      - "resources:/rodan/data"
      - "./rodan-main/code:/code/Rodan"

  rodan-client:
    image: "ddmal/rodan-client:${DOCKER_TAG}"
    volumes:
      - "./rodan-client/code:/code"
      - "./rodan-client/config/configuration.json:/client/configuration.json"

  iipsrv:
    image: "ddmal/iipsrv:${DOCKER_TAG}"
    volumes:
      - "resources:/rodan/data"

  celery:
    image: "ddmal/rodan-main:${DOCKER_TAG}"
    command: bash -c "tail -f /dev/null"
    environment:
      TZ: America/Toronto
      SERVER_HOST: localhost
      CELERY_JOB_QUEUE: celery
    healthcheck:
      test:
        [
          "CMD",
          "celery",
          "inspect",
          "ping",
          "-A",
          "rodan",
          "--workdir",
          "/code/Rodan",
          "-d",
          "celery@celery"
        ]
      interval: "30s"
      timeout: "3s"
      start_period: "1m"
      retries: 3
    depends_on:
      - postgres
      - rodan-main
      - rabbitmq
      - redis
    env_file:
      - ./scripts/local.env
    volumes:
      - "resources:/rodan/data"
      - "./rodan-main/code:/code/Rodan"

  py3-celery:
    image: "ddmal/rodan-python3-celery:${DOCKER_TAG}"
    command: bash -c "tail -f /dev/null"
    environment:
      TZ: America/Toronto
      SERVER_HOST: localhost
      CELERY_JOB_QUEUE: Python3
    depends_on:
      - postgres
      - rodan-main
      - rabbitmq
      - redis
      - celery
    env_file:
      - ./scripts/local.env
    volumes:
      - "resources:/rodan/data"
      - "./rodan-main/code:/code/Rodan"

  gpu-celery:
    image: "ddmal/rodan-gpu-celery:${DOCKER_TAG}"
    command: bash -c "tail -f /dev/null"
    environment:
      TZ: America/Toronto
      SERVER_HOST: localhost
      CELERY_JOB_QUEUE: GPU
    depends_on:
      - postgres
      - rodan-main
      - rabbitmq
      - redis
      - celery
    env_file:
      - ./scripts/local.env
    volumes:
      - "resources:/rodan/data"
      - "./rodan-main/code:/code/Rodan"

  redis:
    image: "redis:alpine"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres

  postgres:
    image: "ddmal/postgres-plpython:${DOCKER_TAG}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./scripts/local.env

  rabbitmq:
    image: "rabbitmq:alpine"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: "30s"
      timeout: "3s"
      retries: 3
    depends_on:
      - redis
    env_file:
      - ./scripts/local.env

volumes:
  resources:
